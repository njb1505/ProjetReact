{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Videos\\\\PROGRAMMATION\\\\Programmation web\\\\JavaScript et ses frameworks\\\\React Js\\\\REACT-POKEMON-APP\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport mock_pokemon from './models/mock-pokemon';\n\n/** \r\n Ici on importe React depuis le module react\r\n On importe aussi FunctionComponet depuis le module react.\r\n*/\n//------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  //  const name: String = 'React';\n  const [pokemons, setpokemons] = useState([]);\n  useEffect(() => {\n    setpokemons(mock_pokemon);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"center\",\n      children: \"Pok\\xE9dex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: pokemons.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col s6 m4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card horizontal\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: el.picture,\n                alt: el.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-stacked\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: el.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: el.created.toString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 24\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\n\n/**\r\n 1.On a typé la constante App à React.FC\r\n\r\n\r\n 2. FunctionComponent: signifie un composant que l'on peut écrire sous forme d'une fonction.\r\n\r\n\r\n 3.useState('React'): prend une valeur initiale du composant qui peut etre un nombre , un objet, un boolean, un tableau, un string et dans notre cas c'est un string.\r\n\r\n 4. la fonction useState retourne une paire de deux elements const [name, setName].\r\n name: l'état actuel\r\n setName: une f(x) pour modifier la valeur de cet état.  \r\n\r\n 5.Pour le typage on utilise les generics de typescript\r\n\r\n\r\n 6.Le role finale de App.tsx est d'appeler le composant pokemon.list qui lui s'occupera d'afficher la liste des pokemons.\r\n */\n//------------------------------------\n_s(App, \"JKhSCU5Fk4WbsqyM+CMWV2z88BQ=\");\n_c = App;\nexport default App; //Ici on exporte notre composant afin qu'il soit utilisable dans le reste de notre application.\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mock_pokemon","jsxDEV","_jsxDEV","App","_s","pokemons","setpokemons","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","el","src","picture","alt","name","created","toString","id","_c","$RefreshReg$"],"sources":["C:/Users/USER/Videos/PROGRAMMATION/Programmation web/JavaScript et ses frameworks/React Js/REACT-POKEMON-APP/src/App.tsx"],"sourcesContent":["import React, {FunctionComponent, useState, useEffect} from 'react';\r\nimport Pokemon from './models/pokemon';\r\nimport mock_pokemon from  './models/mock-pokemon';\r\n\r\n/** \r\n Ici on importe React depuis le module react\r\n On importe aussi FunctionComponet depuis le module react.\r\n*/\r\n//------------------------------------\r\n  \r\nconst App: FunctionComponent = () => {\r\n//  const name: String = 'React';\r\nconst [pokemons, setpokemons]= useState<Pokemon[]>([]);\r\n    \r\nuseEffect(() => {\r\n  setpokemons(mock_pokemon);\r\n}, []);\r\n\r\n return (\r\n  <div>\r\n    <h1 className=\"center\">Pokédex</h1>\r\n    <div className='container'>\r\n        <div className='row'>\r\n          {pokemons.map((el) =>(  \r\n              <div className='col s6 m4' key={el.id}>\r\n                <div className='card horizontal'>\r\n                  <div className='card-image'>\r\n                    <img src={el.picture} alt={el.name}/>\r\n                  </div>\r\n                  \r\n                  <div className='card-stacked'>\r\n                  <div className='card-content'>\r\n                    <p>{el.name}</p>\r\n                    <p><small>{el.created.toString()}</small></p>\r\n                  </div>\r\n                </div> \r\n                </div>\r\n              </div> \r\n          ))}\r\n        </div>\r\n    </div>\r\n  </div>\r\n )\r\n}\r\n\r\n/**\r\n 1.On a typé la constante App à React.FC\r\n\r\n\r\n 2. FunctionComponent: signifie un composant que l'on peut écrire sous forme d'une fonction.\r\n\r\n\r\n 3.useState('React'): prend une valeur initiale du composant qui peut etre un nombre , un objet, un boolean, un tableau, un string et dans notre cas c'est un string.\r\n\r\n 4. la fonction useState retourne une paire de deux elements const [name, setName].\r\n name: l'état actuel\r\n setName: une f(x) pour modifier la valeur de cet état.  \r\n\r\n 5.Pour le typage on utilise les generics de typescript\r\n\r\n\r\n 6.Le role finale de App.tsx est d'appeler le composant pokemon.list qui lui s'occupera d'afficher la liste des pokemons.\r\n */\r\n//------------------------------------\r\nexport default App; //Ici on exporte notre composant afin qu'il soit utilisable dans le reste de notre application."],"mappings":";;AAAA,OAAOA,KAAK,IAAsBC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAEnE,OAAOC,YAAY,MAAO,uBAAuB;;AAEjD;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAER,QAAQ,CAAY,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdO,WAAW,CAACN,YAAY,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEL,oBACCE,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAIM,SAAS,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCV,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAD,QAAA,eACtBL,OAAA;QAAKM,SAAS,EAAC,KAAK;QAAAD,QAAA,EACjBF,QAAQ,CAACQ,GAAG,CAAEC,EAAE,iBACbZ,OAAA;UAAKM,SAAS,EAAC,WAAW;UAAAD,QAAA,eACxBL,OAAA;YAAKM,SAAS,EAAC,iBAAiB;YAAAD,QAAA,gBAC9BL,OAAA;cAAKM,SAAS,EAAC,YAAY;cAAAD,QAAA,eACzBL,OAAA;gBAAKa,GAAG,EAAED,EAAE,CAACE,OAAQ;gBAACC,GAAG,EAAEH,EAAE,CAACI;cAAK;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eAENV,OAAA;cAAKM,SAAS,EAAC,cAAc;cAAAD,QAAA,eAC7BL,OAAA;gBAAKM,SAAS,EAAC,cAAc;gBAAAD,QAAA,gBAC3BL,OAAA;kBAAAK,QAAA,EAAIO,EAAE,CAACI;gBAAI;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAChBV,OAAA;kBAAAK,QAAA,eAAGL,OAAA;oBAAAK,QAAA,EAAQO,EAAE,CAACK,OAAO,CAACC,QAAQ,CAAC;kBAAC;oBAAAX,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC,GAZwBE,EAAE,CAACO,EAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAahC,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAER,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAR,EAAA,CArDMD,GAAsB;AAAAmB,EAAA,GAAtBnB,GAAsB;AAsD5B,eAAeA,GAAG,CAAC,CAAC;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}